#Deploy to Test environment after the PR get merged
name: Report API TEST CD

on:
  push:
    branches:
      - master
    paths:
      - "report-api/**"

env:
  IMAGE_NAME: report-api
  TAG_NAME: test

jobs:
  report-api-test:
    runs-on: ubuntu-latest
    if: github.repository == 'bcgov/sbc-pay'
    steps:
      - uses: actions/checkout@v2
      - name: Install tools
        run: |
          ./scripts/install_tools.sh
          oc version
          op --version
      - name: Log into registry
        run: echo "${{ secrets.OPENSHIFT_TOKEN }}" | docker login ${{ secrets.OPENSHIFT_REGISTRY }} -u ${{ secrets.OPENSHIFT_SA_NAME}} --password-stdin
      - name: Build image
        working-directory: ./report-api
        run: docker build . --file Dockerfile --tag image
      - name: Push image
        working-directory: ./report-api
        run: |
          IMAGE_ID=${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.OPENSHIFT_REPOSITORY }}/$IMAGE_NAME
          docker tag image $IMAGE_ID:$TAG_NAME
          docker push $IMAGE_ID:$TAG_NAME
      - name: Login Openshift
        working-directory: ./report-api
        run: |
          oc ${{ secrets.oc_parameters }}
      - name: Set Deployment Environement Variables
        working-directory: .
        run: |
          vaults='[{ "vault": "shared", "application": ["jwt"]}, {"vault": "relationship","application": ["sentry"]}]'
          ./scripts/1pass.sh ${{ secrets.op_parameters }} -m "secret" -e "${TAG_NAME}" -v "${vaults}" -a "${IMAGE_NAME}-${TAG_NAME}" -n ${{ secrets.OPENSHIFT_REPOSITORY_TEST}}
      - name: Rollout new deployment
        working-directory: ./report-api
        run: |
          oc rollout latest dc/$IMAGE_NAME-${TAG_NAME} -n ${{ secrets.OPENSHIFT_REPOSITORY_TEST}}
          oc rollout status dc/$IMAGE_NAME-${TAG_NAME} -n ${{ secrets.OPENSHIFT_REPOSITORY_TEST}} -w
      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: "*Report API Build and Deploy to ${{env.TAG_NAME}}*"
          channel: "#relationship-developers"
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}
