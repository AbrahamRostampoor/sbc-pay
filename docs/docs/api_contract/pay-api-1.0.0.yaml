---
openapi: 3.0.0
info:
  title: SBC Pay API Reference
  description: BC Registries Pay API reference documentation
  version: 1.0.1
paths:
  /api/v1/fees/:corp_type/:filing_type_code:
    get:
      tags:
        - Fees
      summary: Calculate Fees
      description: Calculate Fees on the filing type for corp type
      operationId: Calculate_Fees
      parameters:
        - name: corp_type
          in: path
          description: Corp Type
          required: true
          schema:
            type: string
        - name: filing_type_code
          in: path
          description: Filing type code
          required: true
          schema:
            type: string
        - name: jurisdiction
          in: query
          description: Jurisdiction or Province code
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: Date on which the filing rates are applicable
          required: false
          schema:
            type: string
        - name: priority
          in: query
          description: Indicator if priority fees are applicable
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Application-Context:
              schema:
                type: string
              description: X-Application-Context
              examples:
                fee_1:
                  value: 'application:prod'
                fee_2:
                  value: 'application:prod'
                fee_3:
                  value: 'application:prod'
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Access-Control-Allow-Origin
              examples:
                fee_1:
                  value: '*'
                fee_2:
                  value: '*'
                fee_3:
                  value: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
              description: Access-Control-Allow-Methods
              examples:
                fee_1:
                  value: 'GET, POST, DELETE, PUT'
                fee_2:
                  value: 'GET, POST, DELETE, PUT'
                fee_3:
                  value: 'GET, POST, DELETE, PUT'
            Access-Control-Allow-Headers:
              schema:
                type: string
              description: Access-Control-Allow-Headers
              examples:
                fee_1:
                  value: 'Content-Type, api_key, Authorization'
                fee_2:
                  value: 'Content-Type, api_key, Authorization'
                fee_3:
                  value: 'Content-Type, api_key, Authorization'

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
              examples:
                fee_1:
                  value: '{
                    "filing_type":"Annual Report",
                    "filing_type_code":"OTANN",
                    "filing_fees":40,
                    "service_fees":0,
                    "processing_fees":0,
                    "tax": {
                      "gst":17.7,
                      "pst":0
                    }
                  }'
                fee_2:
                  value: '{
                    "filing_type":"Change of Registered Office Address",
                    "filing_type_code":"OTCDR",
                    "filing_fees":20,
                    "service_fees":10,
                    "processing_fees":5,
                    "tax": {
                      "gst":0,
                      "pst":0
                    }
                  }'
                fee_3:
                  value: '{
                    "filing_type":"Change of Director",
                    "filing_type_code":"OTADD",
                    "filing_fees":55,
                    "service_fees":0,
                    "processing_fees":0,
                    "tax": {
                      "gst":0,
                      "pst":0
                    }
                  }'

        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
      - name: jurisdiction
        in: query
        required: true
        schema:
          type: string
        examples:
          fee_1:
            value: BC
      - name: corp_type
        in: path
        required: true
        schema:
          type: string
        examples:
          fee_1:
            value: CP
          fee_2:
            value: CP
          fee_3:
            value: CP
      - name: filing_type_code
        in: path
        required: true
        schema:
          type: string
        examples:
          fee_1:
            value: OTANN
          fee_2:
            value: OTAOAD
          fee_3:
            value: OTADD
      - name: date
        in: query
        schema:
          type: string
        examples:
          fee_1:
            value: 2018-12-31
      - name: priority
        in: query
        schema:
          type: boolean
        examples:
          fee_1:
            value: false

  /api/v1/payments:
    post:
      tags:
      - Payments
      summary: Create payment records
      description: >-
        Creates payment records.
      operationId: Create_Payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
            examples:
                payment_post_1:
                  value : '{
                    "payment_info": {
                      "method_of_payment": "CC"
                    },
                    "business_info": {
                      "business_identifier": "CP1234567",
                      "corp_type": "CP",
                      "business_name": "ABC Corp",
                      "contact_info": {
                        "city": "Victoria",
                        "postal_code": "V8P2P2",
                        "province": "BC",
                        "address_line_1": "100 Douglas Street",
                        "country": "CA"
                      }
                    },
                    "filing_info": {
                      "filing_types": [
                        {
                          "filing_type_code": "OTADD",
                        "filing_description":"TEST"
                        },
                        {
                          "filing_type_code": "OTANN"
                        }
                      ]
                    }
                  }'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                payment_post_1:
                  value : '{
                      "_links": {
                          "collection": "/api/v1/payments",
                          "invoices": "/api/v1/payments/153/invoices",
                          "self": "/api/v1/payments/153",
                          "transactions": "/api/v1/payments/153/transactions"
                      },
                      "created_by": "CP1234567",
                      "created_on": "2019-06-18T11:10:00.965101+00:00",
                      "id": 153,
                      "invoices": [
                          {
                              "_links": {
                                  "collection": "/api/v1/payments/153/invoices",
                                  "self": "/api/v1/payments/153/invoices/152"
                              },
                              "created_by": "CP1234567",
                              "created_on": "2019-06-18T11:10:00.982551+00:00",
                              "id": 152,
                              "invoice_number": "10021",
                              "paid": 0,
                              "payment_date": null,
                              "reference_number": "10005",
                              "refund": 0,
                              "status_code": "CREATED",
                              "total": 50,
                              "updated_by": null,
                              "updated_on": null
                          }
                      ],
                      "paid": 0,
                      "payment_method": "CC",
                      "payment_system": "PAYBC",
                      "status_code": "CREATED",
                      "updated_by": null,
                      "updated_on": null
                  }'

        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/payments/:payment_identifier:
    put:
      tags:
        - Payments
      summary: Update payment records
      description: >-
        Updates payment records.
      operationId: Update_Payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
            examples:
              payment_1:
                value : '{
                  "payment_info": {
                    "method_of_payment": "CC"
                  },
                  "business_info": {
                    "business_identifier": "CP1234567",
                    "corp_type": "CP",
                    "business_name": "ABC Corp",
                    "contact_info": {
                      "city": "Victoria",
                      "postal_code": "V8P2P2",
                      "province": "BC",
                      "address_line_1": "100 Douglas Street",
                      "country": "CA"
                    }
                  },
                  "filing_info": {
                    "filing_types": [
                      {
                        "filing_type_code": "OTADD",
                      "filing_description":"TEST"
                      },
                      {
                        "filing_type_code": "OTANN"
                      }
                    ]
                  }
                }'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                payment_1:
                  value : '{
                      "_links": {
                          "collection": "/api/v1/payments",
                          "invoices": "/api/v1/payments/153/invoices",
                          "self": "/api/v1/payments/153",
                          "transactions": "/api/v1/payments/153/transactions"
                      },
                      "created_by": "CP1234567",
                      "created_on": "2019-06-18T11:10:00.965101+00:00",
                      "id": 153,
                      "invoices": [
                          {
                              "_links": {
                                  "collection": "/api/v1/payments/153/invoices",
                                  "self": "/api/v1/payments/153/invoices/152"
                              },
                              "created_by": "CP1234567",
                              "created_on": "2019-06-18T11:10:00.982551+00:00",
                              "id": 152,
                              "invoice_number": "10021",
                              "paid": 0,
                              "payment_date": null,
                              "reference_number": "10005",
                              "refund": 0,
                              "status_code": "CREATED",
                              "total": 50,
                              "updated_by": null,
                              "updated_on": null
                          }
                      ],
                      "paid": 0,
                      "payment_method": "CC",
                      "payment_system": "PAYBC",
                      "status_code": "CREATED",
                      "updated_by": null,
                      "updated_on": null
                  }'

        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Payments
      summary: Get Payment
      description: Get Payment by filing identifier
      operationId: Get_Payment
      parameters:
        - name: payment_identifier
          in: path
          description: Unique Identifier for the payment
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Application-Context:
              schema:
                type: string
              description: X-Application-Context
              examples:
                payment_1:
                  value: 'application:prod'
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Access-Control-Allow-Origin
              examples:
                payment_1:
                  value: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
              description: Access-Control-Allow-Methods
              examples:
                payment_1:
                  value: 'GET, POST, DELETE, PUT'
            Access-Control-Allow-Headers:
              schema:
                type: string
              description: Access-Control-Allow-Headers
              examples:
                payment_1:
                  value: 'Content-Type, api_key, Authorization'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                payment_1:
                  value: '{
                            "_links": {
                                "collection": "/api/v1/payments",
                                "invoices": "/api/v1/payments/153/invoices",
                                "self": "/api/v1/payments/153",
                                "transactions": "/api/v1/payments/153/transactions"
                            },
                            "created_by": "CP1234567",
                            "created_on": "2019-06-18T11:10:00.965101+00:00",
                            "id": 153,
                            "invoices": [
                                {
                                    "_links": {
                                        "collection": "/api/v1/payments/153/invoices",
                                        "self": "/api/v1/payments/153/invoices/152"
                                    },
                                    "created_by": "CP1234567",
                                    "created_on": "2019-06-18T11:10:00.982551+00:00",
                                    "id": 152,
                                    "invoice_number": "10021",
                                    "reference_number": "10005",
                                    "status_code": "CREATED",
                                    "total": 50,
                                    "updated_by": "CP1234567",
                                    "updated_on": "2019-06-20T16:30:04.441211+00:00"
                                }
                            ],
                            "payment_method": "CC",
                            "payment_system": "PAYBC",
                            "status_code": "CREATED",
                            "updated_by": "CP1234567",
                            "updated_on": "2019-06-20T16:30:04.451576+00:00"
                        }'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
    - name: payment_identifier
      in: path     
      required: true
      schema:
        format: string
        type: string
      examples:
        payment_1:
          value: 153

  
  /api/v1/payments/:payment_identifier/transactions:
    post:
      tags:
        - Transactions
      summary: Create a transaction
      description: >-
        Creates a transaction for the payment.
      operationId: Create_Transaction
      parameters:
        - name: redirect_uri
          in: query
          description: Redirect URI
          required: true
          schema:
            type: string
          examples:
            transaction_post_1: 'http%3A//localhost%3A8080/coops-web/transactions%3Ftransaction_id%3Dabcd'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
              examples:
                payment_1:
                  value: '{
                            "_links": {
                                "collection": "/api/v1/payments/153/transactions",
                                "self": "/api/v1/payments/153/transactions/3378001e-cfd5-479b-84a2-bfd4e7eb804d"
                            },
                            "client_system_url": "http://localhost:8080/coops-web/transactions?transaction_id=abcd",
                            "end_time": "2019-06-20 14:55:41.309606",
                            "id": "3378001e-cfd5-479b-84a2-bfd4e7eb804d",
                            "pay_system_url": "http://localhost:8080/Payment?inv_number=10021&pbc_ref_number=10005&redirect_uri=http%3A%2F%2Flocalhost%3A8081%2Freturnpayment%2F153%2Ftransaction%2F3378001e-cfd5-479b-84a2-bfd4e7eb804d",
                            "payment_id": 153,
                            "start_time": "2019-06-20 14:55:41.309574",
                            "status_code": "CREATED"
                        }'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Transactions
      summary: Get Transactions
      description: Get Transactions for the payment
      operationId: Get_Transactions
      parameters:
        - name: payment_identifier
          in: path
          description: Unique Identifier for the payment
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Application-Context:
              schema:
                type: string
              description: X-Application-Context
              examples:
                payment_1:
                  value: 'application:prod'
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Access-Control-Allow-Origin
              examples:
                payment_1:
                  value: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
              description: Access-Control-Allow-Methods
              examples:
                payment_1:
                  value: 'GET, POST, DELETE, PUT'
            Access-Control-Allow-Headers:
              schema:
                type: string
              description: Access-Control-Allow-Headers
              examples:
                payment_1:
                  value: 'Content-Type, api_key, Authorization'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
              examples:
                payment_1:
                  value: '{
                            "items": [
                                {
                                    "_links": {
                                        "collection": "/api/v1/payments/153/transactions",
                                        "self": "/api/v1/payments/153/transactions/3378001e-cfd5-479b-84a2-bfd4e7eb804d"
                                    },
                                    "client_system_url": "http://localhost:8080/coops-web/transactions?transaction_id=abcd",
                                    "end_time": "2019-06-20 14:55:41.309606",
                                    "id": "3378001e-cfd5-479b-84a2-bfd4e7eb804d",
                                    "pay_system_url": "http://localhost:8080/Payment?inv_number=10021&pbc_ref_number=10005&redirect_uri=http%3A%2F%2Flocalhost%3A8081%2Freturnpayment%2F153%2Ftransaction%2F3378001e-cfd5-479b-84a2-bfd4e7eb804d",
                                    "payment_id": 153,
                                    "start_time": "2019-06-20 14:55:41.309574",
                                    "status_code": "CREATED"
                                },
                                {
                                    "_links": {
                                        "collection": "/api/v1/payments/153/transactions",
                                        "self": "/api/v1/payments/153/transactions/227ea487-8f89-4897-849a-ae65febf91fe"
                                    },
                                    "client_system_url": "http://localhost:8080/coops-web/transactions?transaction_id=abcd",
                                    "end_time": "2019-06-20 16:32:15.271165",
                                    "id": "227ea487-8f89-4897-849a-ae65febf91fe",
                                    "pay_system_url": "http://localhost:8080/Payment?inv_number=10021&pbc_ref_number=10005&redirect_uri=http%3A%2F%2Flocalhost%3A8081%2Freturnpayment%2F153%2Ftransaction%2F227ea487-8f89-4897-849a-ae65febf91fe",
                                    "payment_id": 153,
                                    "start_time": "2019-06-20 14:55:41.309574",
                                    "status_code": "CANCELLED"
                                }
                            ]
                        }'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
    - name: payment_identifier
      in: path     
      required: true
      schema:
        format: string
        type: string
      examples:
        payment_1:
          value: 153

  /api/v1/payments/:payment_identifier/transactions/:transaction_identifier:
    put:
      tags:
        - Transactions
      summary: Update a transaction
      description: >-
        Updaate transaction for the payment.
      operationId: Update_Transaction
      parameters:
        - name: payment_identifier
          in: path
          description: Unique Identifier for the payment
          required: true
          schema:
            type: string
        - name: receipt_number
          in: query
          description: Receipt Number for the payment
          required: true
          schema:
            type: string
        - name: transaction_identifier
          in: path
          description: Unique Identifier for the transaction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Transactions
      summary: Get Transaction
      description: Get a Transaction for the payment
      operationId: Get_Transaction
      parameters:
        - name: payment_identifier
          in: path
          description: Unique Identifier for the payment
          required: true
          schema:
            type: string
        - name: transaction_identifier
          in: path
          description: Unique Identifier for the transaction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Application-Context:
              schema:
                type: string
              description: X-Application-Context
              examples:
                payment_get_1:
                  value: 'application:prod'
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: Access-Control-Allow-Origin
              examples:
                payment_get_1:
                  value: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
              description: Access-Control-Allow-Methods
              examples:
                payment_get_1:
                  value: 'GET, POST, DELETE, PUT'
            Access-Control-Allow-Headers:
              schema:
                type: string
              description: Access-Control-Allow-Headers
              examples:
                payment_get_1:
                  value: 'Content-Type, api_key, Authorization'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
              examples:
                payment_get_1:
                  value: ''
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
    - name: payment_identifier
      in: path     
      required: true
      schema:
        format: string
        type: string
      examples:
        payment_get_1:
          value: 1  
          
  /api/v1/payments/:payment_identifier/receipts:
    get:
      tags:
      - Receipts
      summary: Get receipt for the payment
      description: Returns payment receipt details
      operationId: Get_Receipt
      parameters:
        - name: payment_identifier
          in: path
          description: Unique Identifier for the payment
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Receipt PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Identifier representing the type of error that occurred.
        message:
          type: string
          description: Description of the error.
      description: Contains details of an error that was encountered.
    Payment_Line_Item:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for payment line item
        invoice_id:
          type: integer
          description: Unique identifier for invoice
        fee_schedule_id:
          type: id
          description: Fee schedule id
        quantity:
          type: integer
          description: Quantity of fee
        filing_fees:
          type: float
          description: Fees for filing
        service_fees:
          type: float
          description: Applicable service fees
        processing_fees:
          type: float
          description: Applicable processing fees
        description:
          type: string
          description: Description of the fee item
        gst:
          type: float
          description: Applicable gst of the fee item
        pst:
          type: float
          description: Applicable pst of the fee item

    Tax:
      type: object
      properties:
        gst:
          type: integer
          description: Good Services Tax
        pst:
          type: integer
          description: Provincial Sales Tax
    PaymentRequest:
      type: object
      properties:
        payment_info:
          type: object
          items:
            $ref: "#/components/schemas/PaymentInfo"
        filing_info:
          type: object
          items:
            $ref: "#/components/schemas/FilingInfo"
        business_info:
          type: object
          items:
            $ref: "#/components/schemas/BusinessInfo"
    PaymentInfo:
      type: object
      properties:
        method_of_payment:
          type: string
          description: Method of payment
    FilingInfo:
      type: object
      properties:
        corp_type:
          type: string
          description: Corp Type
        date:
          type: string
          description: Date on which the filing rates are applicable
        filing_types:
          type: array
          items:
            $ref: "#/components/schemas/FilingType"
    FilingType:
      type: object
      properties:
        filing_type_code:
          type: string
          description: Filing Type Code
        priority:
          type: boolean
          description: Priority Indicator
        filing_description:
          type: string
          description: Filing Type Description

    BusinessInfo:
      type: object
      properties:
        business_identifier:
          type: string
          description: Business identifier
        business_name:
          type: string
          description: Legal entity name
        contact_info:
          type: object
          items:
            $ref: "#/components/schemas/ContactInfo"

    ContactInfo:
      type: object
      properties:
        first_name:
          type: string
          description: Contact first name
        last_name:
          type: string
          description: Contact last name
        address:
          type: string
          description: Addres line 1
        city:
          type: string
          description: City
        province:
          type: string
          description: Province
        postal_code:
          type: string
          description: Postal Code

    Payment:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for payment
        created_by:
          type: string
          description: username of the account
        created_on:
          type: datetime
          description: payment creation date
        invoices:
          type: array
          items:
              $ref: "#/components/schemas/Invoice"
        payment_method:
          type: string
          description: code of payment method
        payment_status:
          type: string
          description: Status of payment.
          enum: [DRAFT, IN_PROGRESS, CREATED, COMPLETED, PARTIAL, FAILED, REFUNDED, CANCELLED]
        updated_by:
          type: string
          description: username of the account that made update
        updated_date:
          type: datetime
          description: payment update date

    Invoice:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for invoice
        account_id:
          type: integer
          description: id of the account
        created_by:
          type: string
          description: username of the account
        created_on:
          type: datetime
          description: invoice creation date
        payment_date:
          type: datetime
          description: date made payment
        payment_id:
          type: integer
          description: id of the account
        paid:
          type: float
          description: id of the account
        line_items:
          type: array
          items:
              $ref: "#/components/schemas/Payment_Line_Item"
        reference_number:
          type: string
          description: reference number
        invoice_status:
          type: string
          description: Status of payment.
          enum: [DRAFT, IN_PROGRESS, CREATED, COMPLETED, PARTIAL, FAILED, REFUNDED, CANCELLED]